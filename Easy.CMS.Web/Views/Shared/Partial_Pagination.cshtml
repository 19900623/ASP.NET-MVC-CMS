@using System.Text.RegularExpressions
@model Easy.Data.Pagination

@{
    string currentUrl = Request.RawUrl.ToLower();
    if (!currentUrl.Contains("p="))
    {
        if (currentUrl.Contains("?"))
        {
            currentUrl += "&p=0";
        }
        else
        {
            currentUrl += "?p=0";
        }
    }
}

<div class="pagination">
    @if (Model.PageIndex >= 1)
    {
        <a href="@Regex.Replace(currentUrl, @"p=\d", "p=0")">返回首页</a>
        <a href="@Regex.Replace(currentUrl, @"p=\d", "p=" + (Model.PageIndex - 1))">上一页</a>
    }
    else
    {
        <a class="disable">返回首页</a>
        <a class="disable">上一页</a>
    }
    @{
        int start = Model.PageIndex - 3;
        if (start < 1)
        {
            start = 1;
        }
        else
        {
            start++;
            <a>...</a>
        }
        int max = 0;
        for (; start <= Model.AllPage && max < 5; start++)
        {
            <a href="@Regex.Replace(currentUrl, @"p=\d", "p=" + (start - 1))" class="@(start - 1 == Model.PageIndex ? "select" : "")">@start</a>
            max++;
        }
        if (start < Model.AllPage)
        {
            <a>...</a>
        }
    }

    @if (Model.PageIndex < Model.AllPage - 1)
    {
        <a href="@Regex.Replace(currentUrl, @"p=\d", "p=" + (Model.PageIndex + 1))">下一页</a>
        <a href="@Regex.Replace(currentUrl, @"p=\d", "p=" + (Model.AllPage - 1))">最后一页</a>
    }
    else
    {
        <a class="disable">下一页</a>
        <a class="disable">最后一页</a>
    }
    <div class="clearfix"></div>
</div>
